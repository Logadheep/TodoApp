{"ast":null,"code":"var _jsxFileName = \"E:\\\\SpringProjects\\\\Frontend\\\\frontend\\\\src\\\\TodoApp.js\";\nimport { Heading } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TodoApp.css';\n\n// function TodoApp() {\n// \tconst [inputValue, setInputValue] = useState('');\n// \tconst [todos, setTodos] = useState([]);\n\n// \tconst handleInputChange = (e) => {\n// \t\tsetInputValue(e.target.value);\n// \t};\n\n// \tconst handleAddTodo = () => {\n// \t\tif (inputValue !== '') {\n// \t\t\tconst newTodo = {\n// \t\t\t\tid: Date.now(),\n// \t\t\t\ttext: inputValue,\n// \t\t\t\tcompleted: false,\n// \t\t\t};\n// \t\t\tsetTodos([...todos, newTodo]);\n// \t\t\tsetInputValue('');\n// \t\t}\n// \t};\n\n// \tconst handleDeleteTodo = (id) => {\n// \t\tconst updatedTodos = todos.filter((todo) => todo.id !== id);\n// \t\tsetTodos(updatedTodos);\n// \t};\n\n// \tconst handleUpdateTodo = (id) => {\n// \t\tconst updatedTodos = todos.filter((todo) => todo.id === id);\n// \t\tsetTodos(updatedTodos);\n// \t};\n\n// \tconst handleToggleCompleted = (id) => {\n// \t\tconst updatedTodos = todos.map((todo) => {\n// \t\t\tif (todo.id === id) {\n// \t\t\t\treturn { ...todo, completed: !todo.completed };\n// \t\t\t}\n// \t\t\treturn todo;\n// \t\t});\n// \t\tsetTodos(updatedTodos);\n// \t};\n\n// \treturn (\n// \t\t<div className=\"container\">\n// \t\t\t<p className=\"heading\">Todo App</p>\n// \t\t\t<button onClick={handleAddTodo} style={{float:'right'}}>Add Todo</button>\n// \t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n// \t\t\t<ul>\n// \t\t\t\t{todos.map((todo) => (\n// \t\t\t\t\t<li key={todo.id}>\n// \t\t\t\t\t\t<input type=\"checkbox\" onChange={() => handleToggleCompleted(todo.id)}/>\n// \t\t\t\t\t\t<text\n// \t\t\t\t\t\t\tstyle={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n// \t\t\t\t\t\t\tonClick={() => handleToggleCompleted(todo.id)}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{todo.text}\n// \t\t\t\t\t\t</text>\n// \t\t\t\t\t\t<button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n// \t\t\t\t\t\t<button onClick={() => handleUpdateTodo(todo.id)}>Update</button>\n// \t\t\t\t\t</li>\n// \t\t\t\t))}\n// \t\t\t</ul>\n// \t\t</div>\n// \t);\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoApp(e) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["Heading","React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoApp","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/SpringProjects/Frontend/frontend/src/TodoApp.js"],"sourcesContent":["import { Heading } from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TodoApp.css';\r\n\r\n// function TodoApp() {\r\n// \tconst [inputValue, setInputValue] = useState('');\r\n// \tconst [todos, setTodos] = useState([]);\r\n\r\n// \tconst handleInputChange = (e) => {\r\n// \t\tsetInputValue(e.target.value);\r\n// \t};\r\n\r\n// \tconst handleAddTodo = () => {\r\n// \t\tif (inputValue !== '') {\r\n// \t\t\tconst newTodo = {\r\n// \t\t\t\tid: Date.now(),\r\n// \t\t\t\ttext: inputValue,\r\n// \t\t\t\tcompleted: false,\r\n// \t\t\t};\r\n// \t\t\tsetTodos([...todos, newTodo]);\r\n// \t\t\tsetInputValue('');\r\n// \t\t}\r\n// \t};\r\n\r\n// \tconst handleDeleteTodo = (id) => {\r\n// \t\tconst updatedTodos = todos.filter((todo) => todo.id !== id);\r\n// \t\tsetTodos(updatedTodos);\r\n// \t};\r\n\r\n// \tconst handleUpdateTodo = (id) => {\r\n// \t\tconst updatedTodos = todos.filter((todo) => todo.id === id);\r\n// \t\tsetTodos(updatedTodos);\r\n// \t};\r\n\r\n// \tconst handleToggleCompleted = (id) => {\r\n// \t\tconst updatedTodos = todos.map((todo) => {\r\n// \t\t\tif (todo.id === id) {\r\n// \t\t\t\treturn { ...todo, completed: !todo.completed };\r\n// \t\t\t}\r\n// \t\t\treturn todo;\r\n// \t\t});\r\n// \t\tsetTodos(updatedTodos);\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<div className=\"container\">\r\n// \t\t\t<p className=\"heading\">Todo App</p>\r\n// \t\t\t<button onClick={handleAddTodo} style={{float:'right'}}>Add Todo</button>\r\n// \t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n// \t\t\t<ul>\r\n// \t\t\t\t{todos.map((todo) => (\r\n// \t\t\t\t\t<li key={todo.id}>\r\n// \t\t\t\t\t\t<input type=\"checkbox\" onChange={() => handleToggleCompleted(todo.id)}/>\r\n// \t\t\t\t\t\t<text\r\n// \t\t\t\t\t\t\tstyle={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\r\n// \t\t\t\t\t\t\tonClick={() => handleToggleCompleted(todo.id)}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t{todo.text}\r\n// \t\t\t\t\t\t</text>\r\n// \t\t\t\t\t\t<button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\r\n// \t\t\t\t\t\t<button onClick={() => handleUpdateTodo(todo.id)}>Update</button>\r\n// \t\t\t\t\t</li>\r\n// \t\t\t\t))}\r\n// \t\t\t</ul>\r\n// \t\t</div>\r\n// \t);\r\n// }\r\n\r\nfunction TodoApp(e){\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Heading>Todo App</Heading>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,eAAe;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,OAAOA,CAACC,CAAC,EAAC;EAClB,oBACCJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACCL,OAAA,CAACL,OAAO;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAU,iBAEzB;AAEL;AAACC,EAAA,GAPQP,OAAO;AAShB,eAAeA,OAAO;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
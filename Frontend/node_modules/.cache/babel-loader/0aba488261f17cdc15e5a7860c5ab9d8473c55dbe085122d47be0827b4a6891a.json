{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\nvar TRANSITION_DURATION_DROP = 1500; // ms\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\nvar defaultOnRenderHeader = function (classNames) {\n  return function (props) {\n    if (!props) {\n      return null;\n    }\n    if (props.column.isIconOnly) {\n      return React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, props.column.name);\n    }\n    return React.createElement(React.Fragment, null, props.column.name);\n  };\n};\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nvar DetailsColumnBase = /** @class */function (_super) {\n  __extends(DetailsColumnBase, _super);\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._root = React.createRef();\n    _this._onRenderFilterIcon = function (classNames) {\n      return function (props) {\n        var columnProps = props.columnProps,\n          iconProps = __rest(props, [\"columnProps\"]);\n        var IconComponent = (columnProps === null || columnProps === void 0 ? void 0 : columnProps.useFastIcons) ? FontIcon : Icon;\n        return React.createElement(IconComponent, __assign({}, iconProps));\n      };\n    };\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n        onColumnClick = _a.onColumnClick,\n        column = _a.column;\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n        onColumnContextMenu = _a.onColumnContextMenu,\n        column = _a.column;\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable;\n      // Ignore anything except the primary button.\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n      column = _a.column,\n      parentId = _a.parentId,\n      isDraggable = _a.isDraggable,\n      styles = _a.styles,\n      theme = _a.theme,\n      _b = _a.cellStyleProps,\n      cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n      _c = _a.useFastIcons,\n      useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n      onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    var onRenderFilterIcon = column.onRenderFilterIcon ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames)) : this._onRenderFilterIcon(this._classNames);\n    var onRenderHeader = column.onRenderHeader ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames)) : defaultOnRenderHeader(this._classNames);\n    var hasInnerButton = column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    var accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n      'aria-describedby': !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader'\n    }, !hasInnerButton && accNameDescription, {\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"data-is-focusable\": !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }), isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", __assign({\n        id: parentId + \"-\" + column.key,\n        className: classNames.cellTitle,\n        \"data-is-focusable\": hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n        role: hasInnerButton ? 'button' : undefined\n      }, hasInnerButton && accNameDescription, {\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }), React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), onRenderHeader(this.props)), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), (column.isSorted || column.showSortIconWhenUnsorted) && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSorted ? column.isSortedDescending ? 'SortDown' : 'SortUp' : 'Sort'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && onRenderFilterIcon({\n        'aria-hidden': true,\n        columnProps: this.props,\n        className: classNames.filterChevron,\n        iconName: 'ChevronDown'\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null);\n  };\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n    var classNames = this._classNames;\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  };\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  };\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function () {\n        return _this.props.isDraggable;\n      },\n      canDrop: function () {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function () {\n        return undefined;\n      },\n      onDrop: function () {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n  DetailsColumnBase.prototype._hasAccessibleDescription = function () {\n    var column = this.props.column;\n    return !!(column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel || column.sortableAriaLabel);\n  };\n  DetailsColumnBase.prototype._renderAccessibleDescription = function () {\n    var _a = this.props,\n      column = _a.column,\n      parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel,\n      hidden: true\n    }, column.isFiltered && column.filterAriaLabel || null, (column.isSorted || column.showSortIconWhenUnsorted) && (column.isSorted ? column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel : column.sortableAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions());\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n  return DetailsColumnBase;\n}(React.Component);\nexport { DetailsColumnBase };","map":{"version":3,"names":["React","Icon","FontIcon","initializeComponentRef","EventGroup","Async","classNamesFunction","composeRenderFunction","ColumnActionsMode","DEFAULT_CELL_STYLE_PROPS","MOUSEDOWN_PRIMARY_BUTTON","getClassNames","TRANSITION_DURATION_DRAG","TRANSITION_DURATION_DROP","CLASSNAME_ADD_INTERVAL","defaultOnRenderHeader","classNames","props","column","isIconOnly","createElement","className","accessibleLabel","name","Fragment","DetailsColumnBase","_super","__extends","_this","call","_root","createRef","_onRenderFilterIcon","columnProps","iconProps","__rest","IconComponent","useFastIcons","__assign","_onRenderColumnHeaderTooltip","tooltipHostProps","hostClassName","children","_onColumnClick","ev","_a","onColumnClick","columnActionsMode","disabled","_onDragStart","item","itemIndex","selectedItems","event","_classNames","_updateHeaderDragInfo","current","classList","add","borderWhileDragging","_async","setTimeout","noBorderWhileDragging","_onDragEnd","remove","setDraggedItemIndex","updateDragInfo","_onColumnContextMenu","onColumnContextMenu","preventDefault","_onRootMouseDown","isDraggable","button","stopPropagation","_events","prototype","render","parentId","styles","theme","_b","cellStyleProps","_c","_d","onRenderColumnHeaderTooltip","headerClassName","iconClassName","isActionable","isEmpty","isIconVisible","isSorted","isGrouped","isFiltered","isPadded","transitionDurationDrag","transitionDurationDrop","onRenderFilterIcon","onRenderHeader","hasInnerButton","undefined","accNameDescription","ariaLabel","key","_hasAccessibleDescription","ref","role","isSortedDescending","root","draggable","style","width","calculatedWidth","cellLeftPadding","cellRightPadding","cellExtraRightPadding","iconName","gripperBarVerticalStyle","cellTooltip","id","setAriaDescribedBy","content","cellTitle","onContextMenu","onClick","hasDropdown","isMenuOpen","cellName","nearIcon","showSortIconWhenUnsorted","sortIcon","filterChevron","_renderAccessibleDescription","componentDidMount","dragDropHelper","_addDragDropHandling","isDropped","borderAfterDropping","noBorderAfterDropping","componentWillUnmount","_dragDropSubscription","dispose","componentDidUpdate","off","_getColumnDragDropOptions","columnIndex","options","selectionIndex","context","data","index","canDrag","canDrop","onDragStart","updateDropState","onDrop","onDragEnd","filterAriaLabel","sortAscendingAriaLabel","sortDescendingAriaLabel","groupAriaLabel","sortableAriaLabel","hidden","subscribe","on","Component"],"sources":["E:\\SpringProjects\\Frontend\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\DetailsList\\DetailsColumn.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IDisposable } from '../../Utilities';\nimport type { IDragDropOptions } from '../../DragDrop';\nimport type {\n  IDetailsColumnStyleProps,\n  IDetailsColumnProps,\n  IDetailsColumnStyles,\n  IDetailsColumnRenderTooltipProps,\n  IDetailsColumnFilterIconProps,\n} from './DetailsColumn.types';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nconst getClassNames = classNamesFunction<IDetailsColumnStyleProps, IDetailsColumnStyles>();\nconst TRANSITION_DURATION_DRAG = 200; // ms\nconst TRANSITION_DURATION_DROP = 1500; // ms\nconst CLASSNAME_ADD_INTERVAL = 20; // ms\n\nconst defaultOnRenderHeader = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n  props?: IDetailsColumnProps,\n): JSX.Element | null => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.column.isIconOnly) {\n    return <span className={classNames.accessibleLabel}>{props.column.name}</span>;\n  }\n\n  return <>{props.column.name}</>;\n};\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport class DetailsColumnBase extends React.Component<IDetailsColumnProps> {\n  private _async: Async;\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLDivElement>();\n  private _dragDropSubscription?: IDisposable;\n  private _classNames: IProcessedStyleSet<IDetailsColumnStyles>;\n\n  constructor(props: IDetailsColumnProps) {\n    super(props);\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      column,\n      parentId,\n      isDraggable,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      useFastIcons = true,\n    } = this.props;\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n\n    const onRenderFilterIcon = column.onRenderFilterIcon\n      ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames))\n      : this._onRenderFilterIcon(this._classNames);\n\n    const onRenderHeader = column.onRenderHeader\n      ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames))\n      : defaultOnRenderHeader(this._classNames);\n\n    const hasInnerButton =\n      column.columnActionsMode !== ColumnActionsMode.disabled &&\n      (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    const accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : `${parentId}-${column.key}-name`,\n      'aria-describedby':\n        !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription()\n          ? `${parentId}-${column.key}-tooltip`\n          : undefined,\n    };\n\n    return (\n      <>\n        <div\n          key={column.key}\n          ref={this._root}\n          role={'columnheader'}\n          {...(!hasInnerButton && accNameDescription)}\n          aria-sort={column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none'}\n          // when the column is not disabled and has no inner button, this node should be in the focus order\n          data-is-focusable={\n            !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n          }\n          className={classNames.root}\n          data-is-draggable={isDraggable}\n          draggable={isDraggable}\n          style={{\n            width:\n              column.calculatedWidth! +\n              cellStyleProps.cellLeftPadding +\n              cellStyleProps.cellRightPadding +\n              (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          }}\n          data-automationid={'ColumnsHeaderColumn'}\n          data-item-key={column.key}\n        >\n          {isDraggable && (\n            <IconComponent iconName=\"GripperBarVertical\" className={classNames.gripperBarVerticalStyle} />\n          )}\n          {onRenderColumnHeaderTooltip(\n            {\n              hostClassName: classNames.cellTooltip,\n              id: `${parentId}-${column.key}-tooltip`,\n              setAriaDescribedBy: false,\n              column,\n              content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n              children: (\n                <span\n                  id={`${parentId}-${column.key}`}\n                  className={classNames.cellTitle}\n                  // this node should only be focusable when it is a button\n                  data-is-focusable={\n                    hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n                  }\n                  role={hasInnerButton ? 'button' : undefined}\n                  {...(hasInnerButton && accNameDescription)}\n                  onContextMenu={this._onColumnContextMenu}\n                  onClick={this._onColumnClick}\n                  aria-haspopup={column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined}\n                  aria-expanded={\n                    column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n                  }\n                >\n                  <span id={`${parentId}-${column.key}-name`} className={classNames.cellName}>\n                    {(column.iconName || column.iconClassName) && (\n                      <IconComponent className={classNames.iconClassName} iconName={column.iconName} />\n                    )}\n\n                    {onRenderHeader(this.props)}\n                  </span>\n\n                  {column.isFiltered && <IconComponent className={classNames.nearIcon} iconName=\"Filter\" />}\n\n                  {(column.isSorted || column.showSortIconWhenUnsorted) && (\n                    <IconComponent\n                      className={classNames.sortIcon}\n                      iconName={column.isSorted ? (column.isSortedDescending ? 'SortDown' : 'SortUp') : 'Sort'}\n                    />\n                  )}\n\n                  {column.isGrouped && <IconComponent className={classNames.nearIcon} iconName=\"GroupedDescending\" />}\n\n                  {column.columnActionsMode === ColumnActionsMode.hasDropdown &&\n                    !column.isIconOnly &&\n                    onRenderFilterIcon({\n                      'aria-hidden': true,\n                      columnProps: this.props,\n                      className: classNames.filterChevron,\n                      iconName: 'ChevronDown',\n                    })}\n                </span>\n              ),\n            },\n            this._onRenderColumnHeaderTooltip,\n          )}\n        </div>\n        {!this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null}\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    const classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(() => {\n          if (this._root.current) {\n            this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.remove(classNames.borderAfterDropping);\n          this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(): void {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  }\n\n  private _onRenderFilterIcon = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n    props: IDetailsColumnFilterIconProps,\n  ): JSX.Element => {\n    const { columnProps, ...iconProps } = props;\n    const IconComponent = columnProps?.useFastIcons ? FontIcon : Icon;\n\n    return <IconComponent {...iconProps} />;\n  };\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: IDetailsColumnRenderTooltipProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnClick, column } = this.props;\n\n    if (column.columnActionsMode === ColumnActionsMode.disabled) {\n      return;\n    }\n\n    if (column.onColumnClick) {\n      column.onColumnClick(ev, column);\n    }\n\n    if (onColumnClick) {\n      onColumnClick(ev, column);\n    }\n  };\n\n  private _getColumnDragDropOptions(): IDragDropOptions {\n    const { columnIndex } = this.props;\n    const options = {\n      selectionIndex: columnIndex,\n      context: { data: columnIndex, index: columnIndex },\n      canDrag: () => this.props.isDraggable!,\n      canDrop: () => false,\n      onDragStart: this._onDragStart,\n      updateDropState: () => undefined,\n      onDrop: () => undefined,\n      onDragEnd: this._onDragEnd,\n    };\n    return options;\n  }\n\n  private _hasAccessibleDescription(): boolean {\n    const { column } = this.props;\n\n    return !!(\n      column.filterAriaLabel ||\n      column.sortAscendingAriaLabel ||\n      column.sortDescendingAriaLabel ||\n      column.groupAriaLabel ||\n      column.sortableAriaLabel\n    );\n  }\n\n  private _renderAccessibleDescription(): JSX.Element | null {\n    const { column, parentId } = this.props;\n    const classNames = this._classNames;\n\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? (\n      <label\n        key={`${column.key}_label`}\n        id={`${parentId}-${column.key}-tooltip`}\n        className={classNames.accessibleLabel}\n        hidden\n      >\n        {(column.isFiltered && column.filterAriaLabel) || null}\n        {((column.isSorted || column.showSortIconWhenUnsorted) &&\n          (column.isSorted\n            ? column.isSortedDescending\n              ? column.sortDescendingAriaLabel\n              : column.sortAscendingAriaLabel\n            : column.sortableAriaLabel)) ||\n          null}\n        {(column.isGrouped && column.groupAriaLabel) || null}\n      </label>\n    ) : null;\n  }\n\n  private _onDragStart = (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (itemIndex) {\n      this._updateHeaderDragInfo(itemIndex);\n      this._root.current!.classList.add(classNames.borderWhileDragging);\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.add(classNames.noBorderWhileDragging);\n        }\n      }, CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  private _onDragEnd = (item?: any, event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (event) {\n      this._updateHeaderDragInfo(-1, event);\n    }\n    this._root.current!.classList.remove(classNames.borderWhileDragging);\n    this._root.current!.classList.remove(classNames.noBorderWhileDragging);\n  };\n\n  private _updateHeaderDragInfo = (itemIndex: number, event?: MouseEvent) => {\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.setDraggedItemIndex) {\n      this.props.setDraggedItemIndex(itemIndex);\n    }\n    /* eslint-enable deprecation/deprecation */\n    if (this.props.updateDragInfo) {\n      this.props.updateDragInfo({ itemIndex }, event);\n    }\n  };\n\n  private _onColumnContextMenu = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnContextMenu, column } = this.props;\n    if (column.onColumnContextMenu) {\n      column.onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n    if (onColumnContextMenu) {\n      onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const { isDraggable } = this.props;\n    // Ignore anything except the primary button.\n    if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n      ev.stopPropagation();\n    }\n  };\n\n  private _addDragDropHandling() {\n    this._dragDropSubscription = this.props.dragDropHelper!.subscribe(\n      this._root.current!,\n      this._events,\n      this._getColumnDragDropOptions(),\n    );\n\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
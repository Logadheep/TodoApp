{"ast":null,"code":"/**\n * Format a date object to a localized time string using the browser's default locale\n * @param date - Input date to format\n * @param showSeconds - Whether to show seconds in the formatted string\n * @param useHour12 - Whether to use 12-hour time\n */\nexport var formatTimeString = function (date, showSeconds, useHour12) {\n  return date.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n    second: showSeconds ? '2-digit' : undefined,\n    hour12: useHour12\n  });\n};","map":{"version":3,"names":["formatTimeString","date","showSeconds","useHour12","toLocaleTimeString","hour","minute","second","undefined","hour12"],"sources":["E:\\SpringProjects\\Frontend\\frontend\\node_modules\\@fluentui\\date-time-utilities\\lib\\src\\timeFormatting\\index.ts"],"sourcesContent":["/**\n * Format a date object to a localized time string using the browser's default locale\n * @param date - Input date to format\n * @param showSeconds - Whether to show seconds in the formatted string\n * @param useHour12 - Whether to use 12-hour time\n */\nexport const formatTimeString = (date: Date, showSeconds?: boolean, useHour12?: boolean): string =>\n  date.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n    second: showSeconds ? '2-digit' : undefined,\n    hour12: useHour12,\n  });\n"],"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,gBAAgB,GAAG,SAAAA,CAACC,IAAU,EAAEC,WAAqB,EAAEC,SAAmB;EACrF,OAAAF,IAAI,CAACG,kBAAkB,CAAC,EAAE,EAAE;IAC1BC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAEL,WAAW,GAAG,SAAS,GAAGM,SAAS;IAC3CC,MAAM,EAAEN;GACT,CAAC;AALF,CAKE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
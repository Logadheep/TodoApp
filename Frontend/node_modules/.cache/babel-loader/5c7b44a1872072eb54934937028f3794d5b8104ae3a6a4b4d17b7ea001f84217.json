{"ast":null,"code":"var _this = this;\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes, getRTLSafeKeyCode, css, getId, EventGroup } from '../../Utilities';\nimport { List } from '../../List';\nimport { SelectionMode, SELECTION_CHANGE } from '../../Selection';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { GroupHeader } from './GroupHeader';\nimport { GroupShowAll } from './GroupShowAll';\nimport { GroupFooter } from './GroupFooter';\nvar flattenItems = function (groups, items, memoItems, getGroupItemLimit) {\n  if (!groups) {\n    return items;\n  }\n  if (memoItems.length < 1) {\n    // Not the exact final size but gets us in the ballpark.\n    // This helps avoid trashing memory when building\n    // the flattened list.\n    memoItems = new Array(items.length);\n  }\n  var index = 0;\n  // const stack: IGroup[] = [];\n  var stack = [];\n  var j = groups.length - 1;\n  while (j >= 0) {\n    stack.push({\n      group: groups[j],\n      groupIndex: j + 1\n    });\n    j--;\n  }\n  while (stack.length > 0) {\n    // eslint-disable-next-line prefer-const\n    var _a = stack.pop(),\n      group = _a.group,\n      groupIndex = _a.groupIndex;\n    memoItems[index] = {\n      group: group,\n      groupId: getId('GroupedListSection'),\n      type: 'header',\n      groupIndex: groupIndex\n    };\n    index++;\n    while (group.isCollapsed !== true && (group === null || group === void 0 ? void 0 : group.children) && group.children.length > 0) {\n      j = group.children.length - 1;\n      while (j > 0) {\n        stack.push({\n          group: group.children[j],\n          groupIndex: j + 1\n        });\n        j--;\n      }\n      group = group.children[0];\n      memoItems[index] = {\n        group: group,\n        groupId: getId('GroupedListSection'),\n        type: 'header',\n        groupIndex: 1\n      };\n      index++;\n    }\n    if (group.isCollapsed !== true) {\n      var itemIndex = group.startIndex;\n      var renderCount = getGroupItemLimit ? getGroupItemLimit(group) : Infinity;\n      var count = !group.isShowingAll ? group.count : items.length;\n      var itemEnd = itemIndex + Math.min(count, renderCount);\n      while (itemIndex < itemEnd) {\n        memoItems[index] = {\n          group: group,\n          item: items[itemIndex],\n          itemIndex: itemIndex,\n          type: 'item'\n        };\n        itemIndex++;\n        index++;\n      }\n      var isShowAllVisible = !group.children && !group.isCollapsed && !group.isShowingAll && (group.count > renderCount || group.hasMoreData);\n      if (isShowAllVisible) {\n        memoItems[index] = {\n          group: group,\n          type: 'showAll'\n        };\n        index++;\n      }\n    }\n    // Placeholder for a potential footer.\n    // Whether or not a footer is displayed is resolved\n    // by the footer render function so this is just a marker\n    // for where a footer may go.\n    memoItems[index] = {\n      group: group,\n      type: 'footer'\n    };\n    index++;\n  }\n  memoItems.length = index;\n  // console.log('MEMO ITEMS', memoItems);\n  return memoItems;\n};\nvar useIsGroupSelected = function (startIndex, count, selection, eventGroup) {\n  var _a = React.useState(function () {\n      var _a;\n      return (_a = selection === null || selection === void 0 ? void 0 : selection.isRangeSelected(startIndex, count)) !== null && _a !== void 0 ? _a : false;\n    }),\n    isSelected = _a[0],\n    setIsSelected = _a[1];\n  React.useEffect(function () {\n    if (selection && eventGroup) {\n      var changeHandler_1 = function () {\n        var _a;\n        setIsSelected((_a = selection === null || selection === void 0 ? void 0 : selection.isRangeSelected(startIndex, count)) !== null && _a !== void 0 ? _a : false);\n      };\n      eventGroup.on(selection, SELECTION_CHANGE, changeHandler_1);\n      return function () {\n        eventGroup === null || eventGroup === void 0 ? void 0 : eventGroup.off(selection, SELECTION_CHANGE, changeHandler_1);\n      };\n    }\n  }, [startIndex, count, selection, eventGroup]);\n  return isSelected;\n};\nvar computeIsSomeGroupExpanded = function (groups) {\n  return !!(groups && groups.some(function (group) {\n    return group.children ? computeIsSomeGroupExpanded(group.children) : !group.isCollapsed;\n  }));\n};\nvar setGroupsCollapsedState = function (groups, isCollapsed) {\n  if (groups === undefined) {\n    return;\n  }\n  for (var groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n    groups[groupIndex].isCollapsed = isCollapsed;\n  }\n};\nvar isInnerZoneKeystroke = function (ev) {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n};\nvar getClassNames = classNamesFunction();\nvar getKey = function (item, _index) {\n  var _a, _b;\n  switch (item.type) {\n    case 'item':\n      return (_b = (_a = item.item) === null || _a === void 0 ? void 0 : _a.key) !== null && _b !== void 0 ? _b : null;\n    case 'header':\n      return item.group.key;\n    case 'footer':\n      return item.group.key + \"-footer\";\n    case 'showAll':\n      return item.group.key + \"-showAll\";\n  }\n  return null;\n};\nvar renderGroupHeader = function (props) {\n  return React.createElement(GroupHeader, __assign({}, props));\n};\nvar renderGroupShowAll = function (props) {\n  return React.createElement(GroupShowAll, __assign({}, props));\n};\nvar renderGroupFooter = function (props) {\n  if (props.group && props.footerText) {\n    return React.createElement(GroupFooter, __assign({}, props));\n  }\n  return null;\n};\nexport var GroupedListV2FC = function (props) {\n  var selection = props.selection,\n    _a = props.selectionMode,\n    selectionMode = _a === void 0 ? SelectionMode.multiple : _a,\n    _b = props.groupProps,\n    groupProps = _b === void 0 ? {} : _b,\n    _c = props.compact,\n    compact = _c === void 0 ? false : _c,\n    _d = props.items,\n    items = _d === void 0 ? [] : _d,\n    groups = props.groups,\n    onGroupExpandStateChanged = props.onGroupExpandStateChanged,\n    className = props.className,\n    usePageCache = props.usePageCache,\n    onShouldVirtualize = props.onShouldVirtualize,\n    theme = props.theme,\n    _e = props.role,\n    role = _e === void 0 ? 'treegrid' : _e,\n    styles = props.styles,\n    _f = props.focusZoneProps,\n    focusZoneProps = _f === void 0 ? {} : _f,\n    _g = props.rootListProps,\n    rootListProps = _g === void 0 ? {} : _g,\n    onRenderCell = props.onRenderCell,\n    viewport = props.viewport,\n    listRef = props.listRef,\n    groupExpandedVersion = props.groupExpandedVersion,\n    versionFromProps = props.version;\n  var _h = groupProps.onRenderHeader,\n    onRenderHeader = _h === void 0 ? renderGroupHeader : _h,\n    _j = groupProps.onRenderFooter,\n    onRenderFooter = _j === void 0 ? renderGroupFooter : _j,\n    _k = groupProps.onRenderShowAll,\n    onRenderShowAll = _k === void 0 ? renderGroupShowAll : _k;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    compact: compact\n  });\n  var events = React.useRef();\n  var flatList = React.useRef([]);\n  var isSomeGroupExpanded = React.useRef(computeIsSomeGroupExpanded(groups));\n  var _l = React.useState({}),\n    version = _l[0],\n    setVersion = _l[1];\n  var _m = React.useState({}),\n    toggleVersion = _m[0],\n    setToggleVersion = _m[1];\n  // eslint-disable-next-line deprecation/deprecation\n  var _o = focusZoneProps.shouldEnterInnerZone,\n    shouldEnterInnerZone = _o === void 0 ? isInnerZoneKeystroke : _o;\n  var listView = React.useMemo(function () {\n    return flattenItems(groups, items, flatList.current, groupProps === null || groupProps === void 0 ? void 0 : groupProps.getGroupItemLimit);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groups, groupProps === null || groupProps === void 0 ? void 0 : groupProps.getGroupItemLimit, items, toggleVersion, flatList]);\n  var getPageSpecification = React.useCallback(function (flattenedIndex) {\n    var pageGroup = listView[flattenedIndex];\n    return {\n      key: pageGroup.type === 'header' ? pageGroup.group.key : undefined\n    };\n  }, [listView]);\n  React.useEffect(function () {\n    if (groupProps === null || groupProps === void 0 ? void 0 : groupProps.isAllGroupsCollapsed) {\n      setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\n    }\n    events.current = new EventGroup(_this);\n    return function () {\n      var _a;\n      (_a = events.current) === null || _a === void 0 ? void 0 : _a.dispose();\n      events.current = undefined;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(function () {\n    setVersion({});\n  }, [versionFromProps]);\n  React.useEffect(function () {\n    var newIsSomeGroupExpanded = computeIsSomeGroupExpanded(groups);\n    if (newIsSomeGroupExpanded !== isSomeGroupExpanded.current) {\n      isSomeGroupExpanded.current = newIsSomeGroupExpanded;\n      onGroupExpandStateChanged === null || onGroupExpandStateChanged === void 0 ? void 0 : onGroupExpandStateChanged(newIsSomeGroupExpanded);\n    }\n  }, [groups, toggleVersion, onGroupExpandStateChanged, groupExpandedVersion]);\n  var onToggleCollapse = React.useCallback(function (group) {\n    var _a;\n    var onToggleCollapseFn = (_a = groupProps === null || groupProps === void 0 ? void 0 : groupProps.headerProps) === null || _a === void 0 ? void 0 : _a.onToggleCollapse;\n    if (group) {\n      onToggleCollapseFn === null || onToggleCollapseFn === void 0 ? void 0 : onToggleCollapseFn(group);\n      group.isCollapsed = !group.isCollapsed;\n      setToggleVersion({});\n      setVersion({});\n    }\n  }, [setToggleVersion, groupProps]);\n  var onToggleSelectGroup = function (group) {\n    if (group && selection && selectionMode === SelectionMode.multiple) {\n      selection.toggleRangeSelected(group.startIndex, group.count);\n    }\n  };\n  var onToggleSummarize = function (group) {\n    var _a;\n    var onToggleSummarizeFn = (_a = groupProps === null || groupProps === void 0 ? void 0 : groupProps.showAllProps) === null || _a === void 0 ? void 0 : _a.onToggleSummarize;\n    if (onToggleSummarizeFn) {\n      onToggleSummarizeFn(group);\n    } else {\n      if (group) {\n        group.isShowingAll = !group.isShowingAll;\n      }\n      setVersion({});\n      setToggleVersion({});\n    }\n  };\n  var getDividerProps = function (group, flattenedIndex) {\n    var _a;\n    var dividerProps = {\n      group: group,\n      groupIndex: flattenedIndex,\n      groupLevel: (_a = group.level) !== null && _a !== void 0 ? _a : 0,\n      viewport: viewport,\n      selectionMode: selectionMode,\n      groups: groups,\n      compact: compact,\n      onToggleSelectGroup: onToggleSelectGroup,\n      onToggleCollapse: onToggleCollapse,\n      onToggleSummarize: onToggleSummarize\n    };\n    return dividerProps;\n  };\n  var renderHeader = function (item, flattenedIndex) {\n    var group = item.group;\n    var ariaProps;\n    if (role === 'treegrid') {\n      // GroupedList default role\n      ariaProps = {\n        ariaLevel: group.level ? group.level + 1 : 1,\n        ariaSetSize: groups ? groups.length : undefined,\n        ariaPosInSet: item.groupIndex\n      };\n    } else {\n      // Grouped DetailsList\n      ariaProps = {\n        ariaRowIndex: flattenedIndex\n      };\n    }\n    var headerProps = __assign(__assign(__assign(__assign({}, groupProps.headerProps), getDividerProps(item.group, flattenedIndex)), {\n      key: group.key,\n      groupedListId: item.groupId\n    }), ariaProps);\n    return React.createElement(GroupItem, {\n      render: onRenderHeader,\n      defaultRender: renderGroupHeader,\n      item: item,\n      selection: selection,\n      eventGroup: events.current,\n      props: headerProps\n    });\n  };\n  var renderShowAll = function (item, flattenedIndex) {\n    var group = item.group;\n    var groupShowAllProps = __assign(__assign(__assign({}, groupProps.showAllProps), getDividerProps(group, flattenedIndex)), {\n      key: group.key ? group.key + \"-show-all\" : undefined\n    });\n    return onRenderShowAll(groupShowAllProps, renderGroupShowAll);\n  };\n  var renderFooter = function (item, flattenedIndex) {\n    var group = item.group;\n    var groupFooterProps = __assign(__assign(__assign({}, groupProps.footerProps), getDividerProps(group, flattenedIndex)), {\n      key: group.key ? group.key + \"-footer\" : undefined\n    });\n    return onRenderFooter(groupFooterProps, renderGroupFooter);\n  };\n  var renderItem = function (item, flattenedIndex) {\n    var _a;\n    if (item.type === 'header') {\n      return renderHeader(item, flattenedIndex);\n    } else if (item.type === 'showAll') {\n      return renderShowAll(item, flattenedIndex);\n    } else if (item.type === 'footer') {\n      return renderFooter(item, flattenedIndex);\n    } else {\n      var level = item.group.level ? item.group.level + 1 : 1;\n      return onRenderCell(level, item.item, (_a = item.itemIndex) !== null && _a !== void 0 ? _a : flattenedIndex, item.group);\n    }\n  };\n  return React.createElement(FocusZone, __assign({\n    direction: FocusZoneDirection.vertical,\n    \"data-automationid\": \"GroupedList\",\n    \"data-is-scrollable\": \"false\",\n    role: \"presentation\"\n  }, focusZoneProps, {\n    shouldEnterInnerZone: shouldEnterInnerZone,\n    className: css(classNames.root, focusZoneProps.className)\n  }), React.createElement(List, __assign({\n    ref: listRef,\n    role: role,\n    items: listView,\n    // eslint-disable-next-line\n    onRenderCellConditional: renderItem,\n    usePageCache: usePageCache,\n    onShouldVirtualize: onShouldVirtualize,\n    getPageSpecification: getPageSpecification,\n    version: version,\n    getKey: getKey\n  }, rootListProps)));\n};\nvar GroupItem = function (_a) {\n  var render = _a.render,\n    defaultRender = _a.defaultRender,\n    item = _a.item,\n    selection = _a.selection,\n    eventGroup = _a.eventGroup,\n    props = _a.props;\n  var group = item.group;\n  var isSelected = useIsGroupSelected(group.startIndex, group.count, selection, eventGroup);\n  var mergedProps = __assign(__assign({}, props), {\n    isSelected: isSelected,\n    selected: isSelected\n  });\n  return render(mergedProps, defaultRender);\n};\nvar GroupedListV2Wrapper = /** @class */function (_super) {\n  __extends(GroupedListV2Wrapper, _super);\n  function GroupedListV2Wrapper(props) {\n    var _this = _super.call(this, props) || this;\n    _this._list = React.createRef();\n    initializeComponentRef(_this);\n    var _a = props.listProps,\n      _b = _a === void 0 ? {} : _a,\n      _c = _b.version,\n      version = _c === void 0 ? {} : _c,\n      groups = props.groups;\n    _this.state = {\n      version: version,\n      groupExpandedVersion: {},\n      groups: groups\n    };\n    return _this;\n  }\n  GroupedListV2Wrapper.getDerivedStateFromProps = function (nextProps, previousState) {\n    var groups = nextProps.groups,\n      selectionMode = nextProps.selectionMode,\n      compact = nextProps.compact,\n      items = nextProps.items,\n      listProps = nextProps.listProps;\n    var nextListVersion = listProps && listProps.version;\n    var nextState = __assign(__assign({}, previousState), {\n      groups: groups\n    });\n    if (nextListVersion !== previousState.version || items !== previousState.items || groups !== previousState.groups || selectionMode !== previousState.selectionMode || compact !== previousState.compact) {\n      nextState.version = {};\n    }\n    return nextState;\n  };\n  GroupedListV2Wrapper.prototype.scrollToIndex = function (index, measureItem, scrollToMode) {\n    if (this._list.current) {\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    }\n  };\n  GroupedListV2Wrapper.prototype.getStartItemIndexInView = function () {\n    var _a;\n    return ((_a = this._list.current) === null || _a === void 0 ? void 0 : _a.getStartItemIndexInView()) || 0;\n  };\n  GroupedListV2Wrapper.prototype.render = function () {\n    return React.createElement(GroupedListV2FC, __assign({}, this.props, this.state, {\n      listRef: this._list\n    }));\n  };\n  GroupedListV2Wrapper.prototype.forceUpdate = function () {\n    _super.prototype.forceUpdate.call(this);\n    this._forceListUpdate();\n  };\n  GroupedListV2Wrapper.prototype.toggleCollapseAll = function (allCollapsed) {\n    var _a;\n    var groups = this.state.groups;\n    var groupProps = this.props.groupProps;\n    if (groups && groups.length > 0) {\n      (_a = groupProps === null || groupProps === void 0 ? void 0 : groupProps.onToggleCollapseAll) === null || _a === void 0 ? void 0 : _a.call(groupProps, allCollapsed);\n      setGroupsCollapsedState(groups, allCollapsed);\n      this.setState({\n        groupExpandedVersion: {}\n      });\n      this.forceUpdate();\n    }\n  };\n  GroupedListV2Wrapper.prototype._forceListUpdate = function () {\n    this.setState({\n      version: {}\n    });\n  };\n  GroupedListV2Wrapper.displayName = 'GroupedListV2';\n  return GroupedListV2Wrapper;\n}(React.Component);\nexport { GroupedListV2Wrapper };","map":{"version":3,"names":["_this","React","initializeComponentRef","classNamesFunction","KeyCodes","getRTLSafeKeyCode","css","getId","EventGroup","List","SelectionMode","SELECTION_CHANGE","FocusZone","FocusZoneDirection","GroupHeader","GroupShowAll","GroupFooter","flattenItems","groups","items","memoItems","getGroupItemLimit","length","Array","index","stack","j","push","group","groupIndex","_a","pop","groupId","type","isCollapsed","children","itemIndex","startIndex","renderCount","Infinity","count","isShowingAll","itemEnd","Math","min","item","isShowAllVisible","hasMoreData","useIsGroupSelected","selection","eventGroup","useState","isRangeSelected","isSelected","setIsSelected","useEffect","changeHandler_1","on","off","computeIsSomeGroupExpanded","some","setGroupsCollapsedState","undefined","isInnerZoneKeystroke","ev","which","right","getClassNames","getKey","_index","_b","key","renderGroupHeader","props","createElement","__assign","renderGroupShowAll","renderGroupFooter","footerText","GroupedListV2FC","selectionMode","multiple","groupProps","_c","compact","_d","onGroupExpandStateChanged","className","usePageCache","onShouldVirtualize","theme","_e","role","styles","_f","focusZoneProps","_g","rootListProps","onRenderCell","viewport","listRef","groupExpandedVersion","versionFromProps","version","_h","onRenderHeader","_j","onRenderFooter","_k","onRenderShowAll","classNames","events","useRef","flatList","isSomeGroupExpanded","_l","setVersion","_m","toggleVersion","setToggleVersion","_o","shouldEnterInnerZone","listView","useMemo","current","getPageSpecification","useCallback","flattenedIndex","pageGroup","isAllGroupsCollapsed","dispose","newIsSomeGroupExpanded","onToggleCollapse","onToggleCollapseFn","headerProps","onToggleSelectGroup","toggleRangeSelected","onToggleSummarize","onToggleSummarizeFn","showAllProps","getDividerProps","dividerProps","groupLevel","level","renderHeader","ariaProps","ariaLevel","ariaSetSize","ariaPosInSet","ariaRowIndex","groupedListId","GroupItem","render","defaultRender","renderShowAll","groupShowAllProps","renderFooter","groupFooterProps","footerProps","renderItem","direction","vertical","root","ref","onRenderCellConditional","mergedProps","selected","GroupedListV2Wrapper","_super","__extends","call","_list","createRef","listProps","state","getDerivedStateFromProps","nextProps","previousState","nextListVersion","nextState","prototype","scrollToIndex","measureItem","scrollToMode","getStartItemIndexInView","forceUpdate","_forceListUpdate","toggleCollapseAll","allCollapsed","onToggleCollapseAll","setState","displayName","Component"],"sources":["E:\\SpringProjects\\Frontend\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\GroupedList\\GroupedListV2.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  initializeComponentRef,\n  classNamesFunction,\n  KeyCodes,\n  getRTLSafeKeyCode,\n  css,\n  getId,\n  EventGroup,\n  IRenderFunction,\n} from '../../Utilities';\nimport { List, ScrollToMode, IListProps } from '../../List';\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../Selection';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type {\n  IGroupedList,\n  IGroup,\n  IGroupRenderProps,\n  IGroupedListStyleProps,\n  IGroupedListStyles,\n} from './GroupedList.types';\nimport type { IGroupedListV2Props } from './GroupedListV2.types';\nimport { GroupHeader } from './GroupHeader';\nimport { GroupShowAll } from './GroupShowAll';\nimport { GroupFooter } from './GroupFooter';\nimport type { IGroupHeaderProps } from './GroupHeader';\nimport type { IGroupShowAllProps } from './GroupShowAll.styles';\nimport type { IGroupFooterProps } from './GroupFooter.types';\n\nexport interface IGroupedListV2State {\n  selectionMode?: IGroupedListV2Props['selectionMode'];\n  compact?: IGroupedListV2Props['compact'];\n  groups?: IGroup[];\n  items?: IGroupedListV2Props['items'];\n  listProps?: IGroupedListV2Props['listProps'];\n  version: {};\n  groupExpandedVersion: {};\n}\n\ntype IITemGroupedItem = {\n  type: 'item';\n  group: IGroup;\n  item: any;\n  itemIndex: number;\n};\n\ntype IShowAllGroupedItem = {\n  type: 'showAll';\n  group: IGroup;\n};\n\ntype IFooterGroupedItem = {\n  type: 'footer';\n  group: IGroup;\n};\n\ntype IHeaderGroupedItem = {\n  type: 'header';\n  group: IGroup;\n  groupId: string;\n  groupIndex: number;\n};\n\ntype IGroupedItem = IITemGroupedItem | IShowAllGroupedItem | IFooterGroupedItem | IHeaderGroupedItem;\n\ntype FlattenItems = (\n  groups: IGroup[] | undefined,\n  items: any[],\n  memoItems: IGroupedItem[],\n  groupProps: IGroupRenderProps['getGroupItemLimit'],\n) => IGroupedItem[];\n\ntype GroupStackItem = {\n  group: IGroup;\n  groupIndex: number;\n};\n\nconst flattenItems: FlattenItems = (groups, items, memoItems, getGroupItemLimit) => {\n  if (!groups) {\n    return items;\n  }\n\n  if (memoItems.length < 1) {\n    // Not the exact final size but gets us in the ballpark.\n    // This helps avoid trashing memory when building\n    // the flattened list.\n    memoItems = new Array(items.length);\n  }\n\n  let index = 0;\n\n  // const stack: IGroup[] = [];\n  const stack: GroupStackItem[] = [];\n  let j = groups.length - 1;\n  while (j >= 0) {\n    stack.push({ group: groups[j], groupIndex: j + 1 });\n    j--;\n  }\n\n  while (stack.length > 0) {\n    // eslint-disable-next-line prefer-const\n    let { group, groupIndex } = stack.pop()!;\n    memoItems[index] = {\n      group,\n      groupId: getId('GroupedListSection'),\n      type: 'header',\n      groupIndex,\n    };\n\n    index++;\n\n    while (group.isCollapsed !== true && group?.children && group.children.length > 0) {\n      j = group.children.length - 1;\n      while (j > 0) {\n        stack.push({ group: group.children[j], groupIndex: j + 1 });\n        j--;\n      }\n      group = group.children[0];\n      memoItems[index] = {\n        group,\n        groupId: getId('GroupedListSection'),\n        type: 'header',\n        groupIndex: 1,\n      };\n      index++;\n    }\n\n    if (group.isCollapsed !== true) {\n      let itemIndex = group.startIndex;\n      const renderCount = getGroupItemLimit ? getGroupItemLimit(group) : Infinity;\n      const count = !group.isShowingAll ? group.count : items.length;\n      const itemEnd = itemIndex + Math.min(count, renderCount);\n      while (itemIndex < itemEnd) {\n        memoItems[index] = {\n          group,\n          item: items[itemIndex],\n          itemIndex, // track the index in `item` for later rendering/selection\n          type: 'item',\n        };\n        itemIndex++;\n        index++;\n      }\n\n      const isShowAllVisible =\n        !group.children &&\n        !group.isCollapsed &&\n        !group.isShowingAll &&\n        (group.count > renderCount || group.hasMoreData);\n\n      if (isShowAllVisible) {\n        memoItems[index] = {\n          group,\n          type: 'showAll',\n        };\n        index++;\n      }\n    }\n\n    // Placeholder for a potential footer.\n    // Whether or not a footer is displayed is resolved\n    // by the footer render function so this is just a marker\n    // for where a footer may go.\n    memoItems[index] = {\n      group,\n      type: 'footer',\n    };\n    index++;\n  }\n\n  memoItems.length = index;\n\n  // console.log('MEMO ITEMS', memoItems);\n\n  return memoItems;\n};\n\ntype UseIsGroupSelected = (\n  startIndex: number,\n  count: number,\n  selection?: ISelection,\n  eventGroup?: EventGroup,\n) => boolean;\n\nconst useIsGroupSelected: UseIsGroupSelected = (startIndex, count, selection, eventGroup) => {\n  const [isSelected, setIsSelected] = React.useState(() => selection?.isRangeSelected(startIndex, count) ?? false);\n\n  React.useEffect(() => {\n    if (selection && eventGroup) {\n      const changeHandler = () => {\n        setIsSelected(selection?.isRangeSelected(startIndex, count) ?? false);\n      };\n\n      eventGroup.on(selection, SELECTION_CHANGE, changeHandler);\n\n      return () => {\n        eventGroup?.off(selection, SELECTION_CHANGE, changeHandler);\n      };\n    }\n  }, [startIndex, count, selection, eventGroup]);\n\n  return isSelected;\n};\n\nconst computeIsSomeGroupExpanded = (groups: IGroup[] | undefined): boolean => {\n  return !!(\n    groups && groups.some(group => (group.children ? computeIsSomeGroupExpanded(group.children) : !group.isCollapsed))\n  );\n};\n\nconst setGroupsCollapsedState = (groups: IGroup[] | undefined, isCollapsed: boolean): void => {\n  if (groups === undefined) {\n    return;\n  }\n  for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n    groups[groupIndex].isCollapsed = isCollapsed;\n  }\n};\n\nconst isInnerZoneKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n};\n\nconst getClassNames = classNamesFunction<IGroupedListStyleProps, IGroupedListStyles>();\n\nconst getKey: IListProps['getKey'] = (item, _index) => {\n  switch (item.type) {\n    case 'item':\n      return item.item?.key ?? null;\n\n    case 'header':\n      return item.group.key;\n\n    case 'footer':\n      return `${item.group.key}-footer`;\n\n    case 'showAll':\n      return `${item.group.key}-showAll`;\n  }\n\n  return null;\n};\n\nconst renderGroupHeader = (props: IGroupHeaderProps): JSX.Element => {\n  return <GroupHeader {...props} />;\n};\n\nconst renderGroupShowAll = (props: IGroupShowAllProps): JSX.Element => {\n  return <GroupShowAll {...props} />;\n};\n\nconst renderGroupFooter = (props: IGroupFooterProps): JSX.Element | null => {\n  if (props.group && props.footerText) {\n    return <GroupFooter {...props} />;\n  }\n\n  return null;\n};\n\nexport const GroupedListV2FC: React.FC<IGroupedListV2Props> = props => {\n  const {\n    selection,\n    selectionMode = SelectionMode.multiple,\n    groupProps = {},\n    compact = false,\n    items = [],\n    groups,\n    onGroupExpandStateChanged,\n\n    className,\n    usePageCache,\n    onShouldVirtualize,\n    theme,\n    role = 'treegrid',\n    styles,\n    focusZoneProps = {},\n    rootListProps = {},\n    onRenderCell,\n    viewport,\n    listRef,\n    groupExpandedVersion,\n    version: versionFromProps,\n  } = props;\n\n  const {\n    onRenderHeader = renderGroupHeader,\n    onRenderFooter = renderGroupFooter,\n    onRenderShowAll = renderGroupShowAll,\n  } = groupProps;\n\n  const classNames: IProcessedStyleSet<IGroupedListStyles> = getClassNames(styles, {\n    theme: theme!,\n    className,\n    compact,\n  });\n\n  const events = React.useRef<EventGroup>();\n  const flatList = React.useRef<IGroupedItem[]>([]);\n  const isSomeGroupExpanded = React.useRef<boolean>(computeIsSomeGroupExpanded(groups));\n\n  const [version, setVersion] = React.useState({});\n  const [toggleVersion, setToggleVersion] = React.useState({});\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { shouldEnterInnerZone = isInnerZoneKeystroke } = focusZoneProps;\n\n  const listView = React.useMemo(() => {\n    return flattenItems(groups, items, flatList.current, groupProps?.getGroupItemLimit);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groups, groupProps?.getGroupItemLimit, items, toggleVersion, flatList]);\n\n  const getPageSpecification = React.useCallback(\n    (flattenedIndex: number): { key?: string } => {\n      const pageGroup = listView[flattenedIndex];\n      return {\n        key: pageGroup.type === 'header' ? pageGroup.group.key : undefined,\n      };\n    },\n    [listView],\n  );\n\n  React.useEffect(() => {\n    if (groupProps?.isAllGroupsCollapsed) {\n      setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\n    }\n    events.current = new EventGroup(this);\n\n    return () => {\n      events.current?.dispose();\n      events.current = undefined;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    setVersion({});\n  }, [versionFromProps]);\n\n  React.useEffect(() => {\n    const newIsSomeGroupExpanded = computeIsSomeGroupExpanded(groups);\n    if (newIsSomeGroupExpanded !== isSomeGroupExpanded.current) {\n      isSomeGroupExpanded.current = newIsSomeGroupExpanded;\n      onGroupExpandStateChanged?.(newIsSomeGroupExpanded);\n    }\n  }, [groups, toggleVersion, onGroupExpandStateChanged, groupExpandedVersion]);\n\n  const onToggleCollapse = React.useCallback(\n    (group: IGroup): void => {\n      const onToggleCollapseFn = groupProps?.headerProps?.onToggleCollapse;\n\n      if (group) {\n        onToggleCollapseFn?.(group);\n        group.isCollapsed = !group.isCollapsed;\n        setToggleVersion({});\n        setVersion({});\n      }\n    },\n    [setToggleVersion, groupProps],\n  );\n\n  const onToggleSelectGroup = (group: IGroup): void => {\n    if (group && selection && selectionMode === SelectionMode.multiple) {\n      selection.toggleRangeSelected(group.startIndex, group.count);\n    }\n  };\n\n  const onToggleSummarize = (group: IGroup): void => {\n    const onToggleSummarizeFn = groupProps?.showAllProps?.onToggleSummarize;\n\n    if (onToggleSummarizeFn) {\n      onToggleSummarizeFn(group);\n    } else {\n      if (group) {\n        group.isShowingAll = !group.isShowingAll;\n      }\n\n      setVersion({});\n      setToggleVersion({});\n    }\n  };\n\n  const getDividerProps = (group: IGroup, flattenedIndex: number) => {\n    const dividerProps = {\n      group,\n      groupIndex: flattenedIndex,\n      groupLevel: group.level ?? 0,\n      viewport,\n      selectionMode,\n      groups,\n      compact,\n      onToggleSelectGroup,\n      onToggleCollapse,\n      onToggleSummarize,\n    };\n\n    return dividerProps;\n  };\n\n  const renderHeader = (item: IHeaderGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n\n    let ariaProps;\n    if (role === 'treegrid') {\n      // GroupedList default role\n      ariaProps = {\n        ariaLevel: group.level ? group.level + 1 : 1,\n        ariaSetSize: groups ? groups.length : undefined,\n        ariaPosInSet: item.groupIndex,\n      };\n    } else {\n      // Grouped DetailsList\n      ariaProps = {\n        ariaRowIndex: flattenedIndex,\n      };\n    }\n\n    const headerProps = {\n      ...groupProps!.headerProps,\n      ...getDividerProps(item.group, flattenedIndex),\n      key: group.key,\n      groupedListId: item.groupId,\n      ...ariaProps,\n    };\n\n    return (\n      <GroupItem\n        render={onRenderHeader}\n        defaultRender={renderGroupHeader}\n        item={item}\n        selection={selection}\n        eventGroup={events.current}\n        props={headerProps}\n      />\n    );\n  };\n\n  const renderShowAll = (item: IShowAllGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n    const groupShowAllProps = {\n      ...groupProps!.showAllProps,\n      ...getDividerProps(group, flattenedIndex),\n      key: group.key ? `${group.key}-show-all` : undefined,\n    };\n\n    return onRenderShowAll(groupShowAllProps, renderGroupShowAll);\n  };\n\n  const renderFooter = (item: IFooterGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n    const groupFooterProps = {\n      ...groupProps!.footerProps,\n      ...getDividerProps(group, flattenedIndex),\n      key: group.key ? `${group.key}-footer` : undefined,\n    };\n\n    return onRenderFooter(groupFooterProps, renderGroupFooter);\n  };\n\n  const renderItem = (item: IGroupedItem, flattenedIndex: number): React.ReactNode => {\n    if (item.type === 'header') {\n      return renderHeader(item, flattenedIndex);\n    } else if (item.type === 'showAll') {\n      return renderShowAll(item, flattenedIndex);\n    } else if (item.type === 'footer') {\n      return renderFooter(item, flattenedIndex);\n    } else {\n      const level = item.group.level ? item.group.level + 1 : 1;\n      return onRenderCell(level, item.item, item.itemIndex ?? flattenedIndex, item.group);\n    }\n  };\n\n  return (\n    <FocusZone\n      direction={FocusZoneDirection.vertical}\n      data-automationid=\"GroupedList\"\n      data-is-scrollable=\"false\"\n      role=\"presentation\"\n      {...focusZoneProps}\n      shouldEnterInnerZone={shouldEnterInnerZone}\n      className={css(classNames.root, focusZoneProps.className)}\n    >\n      <List\n        ref={listRef}\n        role={role}\n        items={listView}\n        // eslint-disable-next-line\n        onRenderCellConditional={renderItem}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        getPageSpecification={getPageSpecification}\n        version={version}\n        getKey={getKey}\n        {...rootListProps}\n      />\n    </FocusZone>\n  );\n};\n\ninterface IGroupItemProps<T> {\n  props: T;\n  render: IRenderFunction<T>;\n  defaultRender: (props?: T) => JSX.Element | null;\n  item: any;\n  selection?: ISelection;\n  eventGroup?: EventGroup;\n}\n\nconst GroupItem = <T,>({\n  render,\n  defaultRender,\n  item,\n  selection,\n  eventGroup,\n  props,\n}: React.PropsWithChildren<IGroupItemProps<T>>): React.ReactElement | null => {\n  const group = item.group;\n\n  const isSelected = useIsGroupSelected(group.startIndex, group.count, selection, eventGroup);\n  const mergedProps = {\n    ...props,\n    isSelected,\n    selected: isSelected,\n  };\n  return render(mergedProps, defaultRender);\n};\n\nexport class GroupedListV2Wrapper\n  extends React.Component<IGroupedListV2Props, IGroupedListV2State>\n  implements IGroupedList {\n  public static displayName: string = 'GroupedListV2';\n  private _list = React.createRef<List>();\n\n  public static getDerivedStateFromProps(\n    nextProps: IGroupedListV2Props,\n    previousState: IGroupedListV2State,\n  ): IGroupedListV2State {\n    const { groups, selectionMode, compact, items, listProps } = nextProps;\n    const nextListVersion = listProps && listProps.version;\n\n    const nextState = {\n      ...previousState,\n      groups,\n    };\n\n    if (\n      nextListVersion !== previousState.version ||\n      items !== previousState.items ||\n      groups !== previousState.groups ||\n      selectionMode !== previousState.selectionMode ||\n      compact !== previousState.compact\n    ) {\n      nextState.version = {};\n    }\n\n    return nextState;\n  }\n\n  constructor(props: IGroupedListV2Props) {\n    super(props);\n    initializeComponentRef(this);\n\n    const { listProps: { version = {} } = {}, groups } = props;\n    this.state = {\n      version,\n      groupExpandedVersion: {},\n      groups,\n    };\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    if (this._list.current) {\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    return this._list.current?.getStartItemIndexInView() || 0;\n  }\n\n  public render(): JSX.Element {\n    return <GroupedListV2FC {...this.props} {...this.state} listRef={this._list} />;\n  }\n\n  public forceUpdate() {\n    super.forceUpdate();\n    this._forceListUpdate();\n  }\n\n  public toggleCollapseAll(allCollapsed: boolean): void {\n    const { groups } = this.state;\n    const { groupProps } = this.props;\n\n    if (groups && groups.length > 0) {\n      groupProps?.onToggleCollapseAll?.(allCollapsed);\n\n      setGroupsCollapsedState(groups, allCollapsed);\n      this.setState({\n        groupExpandedVersion: {},\n      });\n\n      this.forceUpdate();\n    }\n  }\n\n  private _forceListUpdate(): void {\n    this.setState({\n      version: {},\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}